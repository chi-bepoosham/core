version: '3.7'
services:
    haproxy:
        image: 'haproxy:alpine3.19'
        container_name: haproxy
        links:
            - application_1
            - application_2
        depends_on:
            - application_1
            - application_2
        ports:
            - "8080:8080"
        volumes:
            - './docker/haproxy/config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro'
        restart: always
        networks:
            - main
    postgres:
        image: postgres:16-alpine
        container_name: postgres
        restart: always
        ports:
            - '5432:5432'
        environment:
            POSTGRES_DB: api_chebepoosham
            POSTGRES_USER: chebepoosham
            POSTGRES_PASSWORD: 'oS_}`ue3H376'
        volumes:
            - 'postgres_data:/var/lib/postgresql/data'
            - './docker/postgres/config/postgresql.conf:/var/lib/postgresql/data/postgresql.conf'
        networks:
            - main
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4
        restart: always
        ports:
            - '1490:80'
        depends_on:
            - postgres
        environment:
            PGADMIN_DEFAULT_EMAIL: develop@chebepoosham.ir
            PGADMIN_DEFAULT_PASSWORD: "lU8[0c<06kWz"
        volumes:
            - 'pgadmin_data:/var/lib/pgadmin'
        networks:
            - main
    web_server:
        image: nginx:latest
        container_name: web_server
        restart: always
        expose:
            - "80"
        volumes:
            - './:/usr/share/nginx/html'
            - './docker/nginx/config/web_server/nginx.conf:/etc/nginx/nginx.conf'
        networks:
            - main
        depends_on:
            - application_1
    application_1:
        image: chibepoosham-application:latest
        container_name: application_1
        working_dir: /var/www
        restart: always
        tty: true
        user: "www"
        volumes:
            - './:/var/www:rw'
            - './docker/php/config/php.ini:/usr/local/etc/php/php.ini-development'
            - './docker/php/config/php.ini:/usr/local/etc/php/php.ini-production'
            - './docker/php/config/php.ini:/usr/local/etc/php/conf.d/custom.ini'
        networks:
            - main
        depends_on:
            - postgres
    application_2:
        image: chibepoosham-application:latest
        container_name: application_2
        working_dir: /var/www
        restart: always
        tty: true
        user: "www"
        command: sh -c  "php artisan octane:start --server=swoole --host=0.0.0.0 --rpc-port=6001 --port=1550"
        volumes:
            - './:/var/www:rw'
            - './docker/php/config/php.ini:/usr/local/etc/php/php.ini-development'
            - './docker/php/config/php.ini:/usr/local/etc/php/php.ini-production'
        networks:
            - main
        expose:
            - "1550"
        depends_on:
            - postgres
    application_django:
        image: chibepoosham-application_django:latest
        container_name: application_python
        working_dir: /var/www
        restart: always
        volumes:
            - './PythonModule/:/var/www'
        expose:
            - "8000"
        networks:
            - main
networks:
    main:
        driver: bridge
volumes:
    postgres_data:
        driver: local
    pgadmin_data:
        driver: local
